{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/app.yaml","path":"app.yaml","modified":0,"renderable":0},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/app.yaml","hash":"a859f315273c784c1a557b19adace6b45c589062","modified":1459184909851},{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1459184909851},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1459184909851},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1459184909851},{"_id":"themes/landscape/README.md","hash":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1459184909851},{"_id":"themes/landscape/_config.yml","hash":"aa6c40a22ddfd4fcc7b6b211530971f0ab2bb43d","modified":1459184909851},{"_id":"themes/landscape/package.json","hash":"85358dc34311c6662e841584e206a4679183943f","modified":1459184909859},{"_id":"source/css/mystyles.css","hash":"572241cbcc3e2f07e13c1a22f7d145460f905057","modified":1459185534891},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1459184909851},{"_id":"themes/landscape/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1459184909851},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1459184909855},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1459184909855},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1459184909855},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1459184909855},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1459184909855},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1459184909855},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1459184909855},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1459184909855},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1459184909855},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1459184909855},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1459184909855},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1459184909855},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1459184909859},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"8fdf6dc1a62d7b1649d069f9179f90498a1ff5b2","modified":1459184909855},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1459184909855},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"931aaaffa0910a48199388ede576184ff15793ee","modified":1459184909855},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"83923de8b38712633be5f8cbcc586acd8e2286dd","modified":1459184909855},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1459184909855},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1459184909855},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"4fe8853e864d192701c03e5cd3a5390287b90612","modified":1459184909855},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"c21ca56f419d01a9f49c27b6be9f4a98402b2aa3","modified":1459184909855},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1459184909855},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1459184909855},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1459184909855},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1459184909855},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1459184909855},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1459184909855},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1459184909855},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1459184909879},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1459184909859},{"_id":"themes/landscape/source/css/_variables.styl","hash":"1e49ee277d736b64dbed589cf8629d8b6d7a7a39","modified":1459184909859},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1459184909867},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1459184909867},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1459184909867},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1459184909867},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1459184909867},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1459184909867},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1459184909867},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1459184909879},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1459184909879},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1459184909879},{"_id":"source/_posts/2016/03/hello-world-for-oracle-commerce.md","hash":"c4b719462e97841fb5ff4612af4382fc40dcd924","modified":1459184909851},{"_id":"source/_posts/2016/03/patch-utility-for-perforce.md","hash":"e0f4ec2071380fe04791017f52de09730a728816","modified":1459184909851},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1459184909855},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1459184909855},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1459184909855},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1459184909855},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1459184909855},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1459184909855},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1459184909859},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1459184909859},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1459184909859},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1459184909859},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"febb90972612f3147dfc184e53118a7e3dbb4fb0","modified":1459185440487},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1459184909859},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1459184909859},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1459184909859},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1459184909859},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1459184909859},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1459184909859},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1459184909859},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1459184909859},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1459184909859},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1459184909867},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1459184909867},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1459184909867},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1459184909867},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1459184909875},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1459184909879},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1459184909879},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1459184909867},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1459184909867},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1459184909867},{"_id":"public/css/mystyles.css","hash":"572241cbcc3e2f07e13c1a22f7d145460f905057","modified":1459186062594},{"_id":"public/sitemap.xml","hash":"3bcf0783248ff365a198247a705b60c870048808","modified":1459186062597},{"_id":"public/atom.xml","hash":"1ad39e8122633017acab51652320a69129f17843","modified":1459186062598},{"_id":"public/2016/03/patch-utility-for-perforce/index.html","hash":"f89056337309c3f2ac08f727195b333630065718","modified":1459188082216},{"_id":"public/archives/index.html","hash":"dd7123b80e73a570cefa8657768b4fc1eb11fd2d","modified":1459188056850},{"_id":"public/archives/2016/index.html","hash":"dae6cd8536087b4a3ab59b29912e5b12c4767306","modified":1459188056850},{"_id":"public/archives/2016/03/index.html","hash":"d7d13698835e8c6fabc81d0c841f62f18ab844b6","modified":1459188056850},{"_id":"public/index.html","hash":"a4679cf737aadaecebae79e7d5afc210825cd8e4","modified":1459188056850},{"_id":"public/tags/atg/index.html","hash":"139ef42cd7e819de9601b4504f1f1c7c77aa0b59","modified":1459188056851},{"_id":"public/tags/java/index.html","hash":"d425effa1b98ba6184724aafb706442c02eecabb","modified":1459188056851},{"_id":"public/tags/oraclecommerce/index.html","hash":"f3dca552cdada4c5bac100f82fd11b8368663a6e","modified":1459188056851},{"_id":"public/tags/javafx/index.html","hash":"4742459fb7153fe1c7644c3b64db85e62bf29369","modified":1459188056851},{"_id":"public/tags/opensource/index.html","hash":"d61902586755369ab1cbe1eb48d5d823dccba738","modified":1459188056851},{"_id":"public/tags/perforce/index.html","hash":"ad80096892b9513ee79db61141df02281ca5b242","modified":1459188056851},{"_id":"public/2016/03/hello-world-for-oracle-commerce/index.html","hash":"07ed0deb10b258715fea14c914a4a0d9abfbd1c8","modified":1459188082216},{"_id":"public/app.yaml","hash":"a859f315273c784c1a557b19adace6b45c589062","modified":1459186062640},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1459186062640},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1459186062641},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1459186062641},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1459186062641},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1459186062641},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1459186062641},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1459186062641},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1459186062642},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1459186062642},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1459186062642},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1459186064157},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1459186064165},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1459186064165},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1459186064165},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1459186064165},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1459186064165},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1459186064166},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1459186064166},{"_id":"public/css/style.css","hash":"4df3aa5a3251c5a34d3fbfccfa4c3089878ba94c","modified":1459186064166},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1459186064167},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1459186064167},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1459186064172},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1459186064172}],"Category":[],"Data":[],"Page":[{"_content":".admonition {\n  padding: 0 5px;\n  margin-bottom: 10px;\n  margin-left: 2.5em;\n  border: 1px solid transparent;\n  border-left: 4px solid;\n  border-radius: 1px;\n  text-align: left;\n}\n\n.admonition-title {\n  font-weight: bold;\n  text-align: left;\n}\n\n.admonition.note,\n.admonition.info,\n.admonition.tips {\n  color: #1d6fa5;\n  background-color: #a0cfee;\n  border-color: #3498db;\n}\n\n.admonition.warning,\n.admonition.warn,\n.admonition.important {\n  color: #a85913;\n  background-color: #f3c195;\n  border-color: #e67e22;\n}\n\n.admonition.danger,\n.admonition.critical {\n  color: #bf2718;\n  background-color: #f5b4ae;\n  border-color: #e74c3c;\n}\n\n#header-outer {\n  height: initial;\n}\n\n#banner {\n  background: center #000;\n}","source":"css/mystyles.css","raw":".admonition {\n  padding: 0 5px;\n  margin-bottom: 10px;\n  margin-left: 2.5em;\n  border: 1px solid transparent;\n  border-left: 4px solid;\n  border-radius: 1px;\n  text-align: left;\n}\n\n.admonition-title {\n  font-weight: bold;\n  text-align: left;\n}\n\n.admonition.note,\n.admonition.info,\n.admonition.tips {\n  color: #1d6fa5;\n  background-color: #a0cfee;\n  border-color: #3498db;\n}\n\n.admonition.warning,\n.admonition.warn,\n.admonition.important {\n  color: #a85913;\n  background-color: #f3c195;\n  border-color: #e67e22;\n}\n\n.admonition.danger,\n.admonition.critical {\n  color: #bf2718;\n  background-color: #f5b4ae;\n  border-color: #e74c3c;\n}\n\n#header-outer {\n  height: initial;\n}\n\n#banner {\n  background: center #000;\n}","date":"2016-03-28T17:18:54.891Z","updated":"2016-03-28T17:18:54.891Z","path":"css/mystyles.css","layout":"false","title":"","comments":1,"_id":"cimc9pewj0000bgy7ekroidur","content":".admonition {\n  padding: 0 5px;\n  margin-bottom: 10px;\n  margin-left: 2.5em;\n  border: 1px solid transparent;\n  border-left: 4px solid;\n  border-radius: 1px;\n  text-align: left;\n}\n\n.admonition-title {\n  font-weight: bold;\n  text-align: left;\n}\n\n.admonition.note,\n.admonition.info,\n.admonition.tips {\n  color: #1d6fa5;\n  background-color: #a0cfee;\n  border-color: #3498db;\n}\n\n.admonition.warning,\n.admonition.warn,\n.admonition.important {\n  color: #a85913;\n  background-color: #f3c195;\n  border-color: #e67e22;\n}\n\n.admonition.danger,\n.admonition.critical {\n  color: #bf2718;\n  background-color: #f5b4ae;\n  border-color: #e74c3c;\n}\n\n#header-outer {\n  height: initial;\n}\n\n#banner {\n  background: center #000;\n}","excerpt":"","more":".admonition {\n  padding: 0 5px;\n  margin-bottom: 10px;\n  margin-left: 2.5em;\n  border: 1px solid transparent;\n  border-left: 4px solid;\n  border-radius: 1px;\n  text-align: left;\n}\n\n.admonition-title {\n  font-weight: bold;\n  text-align: left;\n}\n\n.admonition.note,\n.admonition.info,\n.admonition.tips {\n  color: #1d6fa5;\n  background-color: #a0cfee;\n  border-color: #3498db;\n}\n\n.admonition.warning,\n.admonition.warn,\n.admonition.important {\n  color: #a85913;\n  background-color: #f3c195;\n  border-color: #e67e22;\n}\n\n.admonition.danger,\n.admonition.critical {\n  color: #bf2718;\n  background-color: #f5b4ae;\n  border-color: #e74c3c;\n}\n\n#header-outer {\n  height: initial;\n}\n\n#banner {\n  background: center #000;\n}"}],"Post":[{"title":"Hello World for Oracle Commerce (ATG)","date":"2016-03-06T18:13:41.000Z","_content":"There are so many concepts in Oracle Commerce (previously known as ATG), that makes coming up with Hello World program little difficult. Do you mean to create one JSP page and deploy it like commerce reference store? Do you want to create a component just to see in Dyn/Admin? Do you want to create a hello world repository? Depending on what you want to do, the approach to take will be different.\npeople_meaphor_options_gray\nTo work with Oracle Commerce, you don’t have to know about persisting data in database. If you approach Oracle Commerce programming with J2EE & MVC experience, you may find it little difficult to cope with it unless you start with a fresh mind, because things are very different in this platform.\n\nToday, I will demonstrate how to create a simple component so that it can be viewed in Dyn/Admin. Let us assume that you are trying to create it in your own module instead of existing module like DAS or DAF. Follow the the steps shown below.\n\n## Step 1: Create an Eclipse project\n\nCreate an Eclipse project and make sure you add all the necessary class files to the build path. Add classes.jar or DAS at the least.\n\n<!-- more --> \n\n## Step 2: Create the Java Class\n\nA component in Oracle Commerce is combination of two files. A Java Class and a Properties File. The Java class can be a simple bean or can be a service that performs several tasks based on a schedule. Simplest way to create the necessary Java class is to extend GenericService.\n\n\n\n### HelloWorldComponent.java\n``` java\npackage com.buddha.components;\n\nimport atg.nucleus.GenericService;\nimport atg.nucleus.ServiceException;\n\npublic class HelloWorldComponent extends GenericService {\n\n    public String firstStr = \"Dummy Value\";\n\n    public String getFirstStr() {\n        return firstStr;\n    }\n\n    public void setFirstStr(String firstStr) {\n        this.firstStr = firstStr;\n    }\n\n    @Override\n    public void doStartService() throws ServiceException {\n        super.doStartService();\n        System.out.println(\"Hello ATG Component!\");\n    }\n\n    @Override\n    public void doStopService() throws ServiceException {\n        super.doStopService();\n        System.out.println(\"Hello ATG Component! Stops now!\");\n    }\n}\n```\n\n## Step 3: Create the properties file\n\nThe Properties file must be providing the values to the properties in the component.\n\n### HelloWorldComponent.properties\n```\n$class=com.buddha.components.HelloWorldComponent\nfirstStr=HelloWorld\n```\n## Step 4: Create a Manifest file\n\nManifest files is like a configuration for the module. What all are its dependencies when it is running in webserver, where are the compiled classes placed etc.,\n\n### Manifest.MF\n```\nManifest-Version: 1.0\nATG-Required: DafEar.Admin\nATG-Config-Path: config/\nATG-Class-Path: ./bin/\n```\n## Step 5: Build & Deploy\nBuild the project and copy the project folder into ${DYNAMO_ROOT} and run the following command to generate an ear file of your project and deploy it in your jboss server. No need to generate any ear file if you are running it on Tomcat. Just start the respective server with the given module.\n\n```\nrunAssembler.bat -jboss HelloWorld.ear -m EXP_HelloATGComponentWorld\n```\n## Step 6: Access the Component\n\nNavigate to Dyn/Admin and search for the component HelloWorldComponent and click on the component listed in the search results.\n\nSearchResults of the component we have just created\nSearch Results\n\nClick on it to go to the component page to see the property we have created and its value given in properties file.\n\nComponent Property we have created\n\nYou can see the server log to find a line similar to this.\n\n```\nINFO  [stdout] /dyn/admin/nucleus//com/buddha/components/HelloWorldComponent Hello ATG Component!\n.....\nINFO  [stdout] /dyn/admin/nucleus//com/buddha/components/HelloWorldComponent Hello ATG Component! Stops now!\n```\nThis line is generated because of the sysout in our doStartService(); You can also give other methods that can be called through dyn/admin or interact with other components. However in production, avoid using System.out.println, instead use loggingDebug or loggingInfo. Best of Luck.\n","source":"_posts/2016/03/hello-world-for-oracle-commerce.md","raw":"---\ntitle: Hello World for Oracle Commerce (ATG)\ndate: 2016-03-06 23:43:41\ntags: ['atg', 'java', 'oraclecommerce']\n---\nThere are so many concepts in Oracle Commerce (previously known as ATG), that makes coming up with Hello World program little difficult. Do you mean to create one JSP page and deploy it like commerce reference store? Do you want to create a component just to see in Dyn/Admin? Do you want to create a hello world repository? Depending on what you want to do, the approach to take will be different.\npeople_meaphor_options_gray\nTo work with Oracle Commerce, you don’t have to know about persisting data in database. If you approach Oracle Commerce programming with J2EE & MVC experience, you may find it little difficult to cope with it unless you start with a fresh mind, because things are very different in this platform.\n\nToday, I will demonstrate how to create a simple component so that it can be viewed in Dyn/Admin. Let us assume that you are trying to create it in your own module instead of existing module like DAS or DAF. Follow the the steps shown below.\n\n## Step 1: Create an Eclipse project\n\nCreate an Eclipse project and make sure you add all the necessary class files to the build path. Add classes.jar or DAS at the least.\n\n<!-- more --> \n\n## Step 2: Create the Java Class\n\nA component in Oracle Commerce is combination of two files. A Java Class and a Properties File. The Java class can be a simple bean or can be a service that performs several tasks based on a schedule. Simplest way to create the necessary Java class is to extend GenericService.\n\n\n\n### HelloWorldComponent.java\n``` java\npackage com.buddha.components;\n\nimport atg.nucleus.GenericService;\nimport atg.nucleus.ServiceException;\n\npublic class HelloWorldComponent extends GenericService {\n\n    public String firstStr = \"Dummy Value\";\n\n    public String getFirstStr() {\n        return firstStr;\n    }\n\n    public void setFirstStr(String firstStr) {\n        this.firstStr = firstStr;\n    }\n\n    @Override\n    public void doStartService() throws ServiceException {\n        super.doStartService();\n        System.out.println(\"Hello ATG Component!\");\n    }\n\n    @Override\n    public void doStopService() throws ServiceException {\n        super.doStopService();\n        System.out.println(\"Hello ATG Component! Stops now!\");\n    }\n}\n```\n\n## Step 3: Create the properties file\n\nThe Properties file must be providing the values to the properties in the component.\n\n### HelloWorldComponent.properties\n```\n$class=com.buddha.components.HelloWorldComponent\nfirstStr=HelloWorld\n```\n## Step 4: Create a Manifest file\n\nManifest files is like a configuration for the module. What all are its dependencies when it is running in webserver, where are the compiled classes placed etc.,\n\n### Manifest.MF\n```\nManifest-Version: 1.0\nATG-Required: DafEar.Admin\nATG-Config-Path: config/\nATG-Class-Path: ./bin/\n```\n## Step 5: Build & Deploy\nBuild the project and copy the project folder into ${DYNAMO_ROOT} and run the following command to generate an ear file of your project and deploy it in your jboss server. No need to generate any ear file if you are running it on Tomcat. Just start the respective server with the given module.\n\n```\nrunAssembler.bat -jboss HelloWorld.ear -m EXP_HelloATGComponentWorld\n```\n## Step 6: Access the Component\n\nNavigate to Dyn/Admin and search for the component HelloWorldComponent and click on the component listed in the search results.\n\nSearchResults of the component we have just created\nSearch Results\n\nClick on it to go to the component page to see the property we have created and its value given in properties file.\n\nComponent Property we have created\n\nYou can see the server log to find a line similar to this.\n\n```\nINFO  [stdout] /dyn/admin/nucleus//com/buddha/components/HelloWorldComponent Hello ATG Component!\n.....\nINFO  [stdout] /dyn/admin/nucleus//com/buddha/components/HelloWorldComponent Hello ATG Component! Stops now!\n```\nThis line is generated because of the sysout in our doStartService(); You can also give other methods that can be called through dyn/admin or interact with other components. However in production, avoid using System.out.println, instead use loggingDebug or loggingInfo. Best of Luck.\n","slug":"2016/03/hello-world-for-oracle-commerce","published":1,"updated":"2016-03-28T17:08:29.851Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cimc9peyb0001bgy7oxkr3qs6","content":"<p>There are so many concepts in Oracle Commerce (previously known as ATG), that makes coming up with Hello World program little difficult. Do you mean to create one JSP page and deploy it like commerce reference store? Do you want to create a component just to see in Dyn/Admin? Do you want to create a hello world repository? Depending on what you want to do, the approach to take will be different.<br>people_meaphor_options_gray<br>To work with Oracle Commerce, you don’t have to know about persisting data in database. If you approach Oracle Commerce programming with J2EE &amp; MVC experience, you may find it little difficult to cope with it unless you start with a fresh mind, because things are very different in this platform.</p>\n<p>Today, I will demonstrate how to create a simple component so that it can be viewed in Dyn/Admin. Let us assume that you are trying to create it in your own module instead of existing module like DAS or DAF. Follow the the steps shown below.</p>\n<h2 id=\"Step-1-Create-an-Eclipse-project\"><a href=\"#Step-1-Create-an-Eclipse-project\" class=\"headerlink\" title=\"Step 1: Create an Eclipse project\"></a>Step 1: Create an Eclipse project</h2><p>Create an Eclipse project and make sure you add all the necessary class files to the build path. Add classes.jar or DAS at the least.</p>\n<a id=\"more\"></a> \n<h2 id=\"Step-2-Create-the-Java-Class\"><a href=\"#Step-2-Create-the-Java-Class\" class=\"headerlink\" title=\"Step 2: Create the Java Class\"></a>Step 2: Create the Java Class</h2><p>A component in Oracle Commerce is combination of two files. A Java Class and a Properties File. The Java class can be a simple bean or can be a service that performs several tasks based on a schedule. Simplest way to create the necessary Java class is to extend GenericService.</p>\n<h3 id=\"HelloWorldComponent-java\"><a href=\"#HelloWorldComponent-java\" class=\"headerlink\" title=\"HelloWorldComponent.java\"></a>HelloWorldComponent.java</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.buddha.components;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> atg.nucleus.GenericService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> atg.nucleus.ServiceException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloWorldComponent</span> <span class=\"keyword\">extends</span> <span class=\"title\">GenericService</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String firstStr = <span class=\"string\">\"Dummy Value\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getFirstStr</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> firstStr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setFirstStr</span><span class=\"params\">(String firstStr)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.firstStr = firstStr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doStartService</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> ServiceException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.doStartService();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"Hello ATG Component!\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doStopService</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> ServiceException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.doStopService();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"Hello ATG Component! Stops now!\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Step-3-Create-the-properties-file\"><a href=\"#Step-3-Create-the-properties-file\" class=\"headerlink\" title=\"Step 3: Create the properties file\"></a>Step 3: Create the properties file</h2><p>The Properties file must be providing the values to the properties in the component.</p>\n<h3 id=\"HelloWorldComponent-properties\"><a href=\"#HelloWorldComponent-properties\" class=\"headerlink\" title=\"HelloWorldComponent.properties\"></a>HelloWorldComponent.properties</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$class=com.buddha.components.HelloWorldComponent</span><br><span class=\"line\">firstStr=HelloWorld</span><br></pre></td></tr></table></figure>\n<h2 id=\"Step-4-Create-a-Manifest-file\"><a href=\"#Step-4-Create-a-Manifest-file\" class=\"headerlink\" title=\"Step 4: Create a Manifest file\"></a>Step 4: Create a Manifest file</h2><p>Manifest files is like a configuration for the module. What all are its dependencies when it is running in webserver, where are the compiled classes placed etc.,</p>\n<h3 id=\"Manifest-MF\"><a href=\"#Manifest-MF\" class=\"headerlink\" title=\"Manifest.MF\"></a>Manifest.MF</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Manifest-Version: 1.0</span><br><span class=\"line\">ATG-Required: DafEar.Admin</span><br><span class=\"line\">ATG-Config-Path: config/</span><br><span class=\"line\">ATG-Class-Path: ./bin/</span><br></pre></td></tr></table></figure>\n<h2 id=\"Step-5-Build-amp-Deploy\"><a href=\"#Step-5-Build-amp-Deploy\" class=\"headerlink\" title=\"Step 5: Build &amp; Deploy\"></a>Step 5: Build &amp; Deploy</h2><p>Build the project and copy the project folder into ${DYNAMO_ROOT} and run the following command to generate an ear file of your project and deploy it in your jboss server. No need to generate any ear file if you are running it on Tomcat. Just start the respective server with the given module.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">runAssembler.bat -jboss HelloWorld.ear -m EXP_HelloATGComponentWorld</span><br></pre></td></tr></table></figure>\n<h2 id=\"Step-6-Access-the-Component\"><a href=\"#Step-6-Access-the-Component\" class=\"headerlink\" title=\"Step 6: Access the Component\"></a>Step 6: Access the Component</h2><p>Navigate to Dyn/Admin and search for the component HelloWorldComponent and click on the component listed in the search results.</p>\n<p>SearchResults of the component we have just created<br>Search Results</p>\n<p>Click on it to go to the component page to see the property we have created and its value given in properties file.</p>\n<p>Component Property we have created</p>\n<p>You can see the server log to find a line similar to this.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INFO  [stdout] /dyn/admin/nucleus//com/buddha/components/HelloWorldComponent Hello ATG Component!</span><br><span class=\"line\">.....</span><br><span class=\"line\">INFO  [stdout] /dyn/admin/nucleus//com/buddha/components/HelloWorldComponent Hello ATG Component! Stops now!</span><br></pre></td></tr></table></figure>\n<p>This line is generated because of the sysout in our doStartService(); You can also give other methods that can be called through dyn/admin or interact with other components. However in production, avoid using System.out.println, instead use loggingDebug or loggingInfo. Best of Luck.</p>\n","excerpt":"<p>There are so many concepts in Oracle Commerce (previously known as ATG), that makes coming up with Hello World program little difficult. Do you mean to create one JSP page and deploy it like commerce reference store? Do you want to create a component just to see in Dyn/Admin? Do you want to create a hello world repository? Depending on what you want to do, the approach to take will be different.<br>people_meaphor_options_gray<br>To work with Oracle Commerce, you don’t have to know about persisting data in database. If you approach Oracle Commerce programming with J2EE &amp; MVC experience, you may find it little difficult to cope with it unless you start with a fresh mind, because things are very different in this platform.</p>\n<p>Today, I will demonstrate how to create a simple component so that it can be viewed in Dyn/Admin. Let us assume that you are trying to create it in your own module instead of existing module like DAS or DAF. Follow the the steps shown below.</p>\n<h2 id=\"Step-1-Create-an-Eclipse-project\"><a href=\"#Step-1-Create-an-Eclipse-project\" class=\"headerlink\" title=\"Step 1: Create an Eclipse project\"></a>Step 1: Create an Eclipse project</h2><p>Create an Eclipse project and make sure you add all the necessary class files to the build path. Add classes.jar or DAS at the least.</p>","more":"<h2 id=\"Step-2-Create-the-Java-Class\"><a href=\"#Step-2-Create-the-Java-Class\" class=\"headerlink\" title=\"Step 2: Create the Java Class\"></a>Step 2: Create the Java Class</h2><p>A component in Oracle Commerce is combination of two files. A Java Class and a Properties File. The Java class can be a simple bean or can be a service that performs several tasks based on a schedule. Simplest way to create the necessary Java class is to extend GenericService.</p>\n<h3 id=\"HelloWorldComponent-java\"><a href=\"#HelloWorldComponent-java\" class=\"headerlink\" title=\"HelloWorldComponent.java\"></a>HelloWorldComponent.java</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.buddha.components;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> atg.nucleus.GenericService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> atg.nucleus.ServiceException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloWorldComponent</span> <span class=\"keyword\">extends</span> <span class=\"title\">GenericService</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String firstStr = <span class=\"string\">\"Dummy Value\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getFirstStr</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> firstStr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setFirstStr</span><span class=\"params\">(String firstStr)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.firstStr = firstStr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doStartService</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> ServiceException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.doStartService();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"Hello ATG Component!\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doStopService</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> ServiceException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.doStopService();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"Hello ATG Component! Stops now!\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Step-3-Create-the-properties-file\"><a href=\"#Step-3-Create-the-properties-file\" class=\"headerlink\" title=\"Step 3: Create the properties file\"></a>Step 3: Create the properties file</h2><p>The Properties file must be providing the values to the properties in the component.</p>\n<h3 id=\"HelloWorldComponent-properties\"><a href=\"#HelloWorldComponent-properties\" class=\"headerlink\" title=\"HelloWorldComponent.properties\"></a>HelloWorldComponent.properties</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$class=com.buddha.components.HelloWorldComponent</span><br><span class=\"line\">firstStr=HelloWorld</span><br></pre></td></tr></table></figure>\n<h2 id=\"Step-4-Create-a-Manifest-file\"><a href=\"#Step-4-Create-a-Manifest-file\" class=\"headerlink\" title=\"Step 4: Create a Manifest file\"></a>Step 4: Create a Manifest file</h2><p>Manifest files is like a configuration for the module. What all are its dependencies when it is running in webserver, where are the compiled classes placed etc.,</p>\n<h3 id=\"Manifest-MF\"><a href=\"#Manifest-MF\" class=\"headerlink\" title=\"Manifest.MF\"></a>Manifest.MF</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Manifest-Version: 1.0</span><br><span class=\"line\">ATG-Required: DafEar.Admin</span><br><span class=\"line\">ATG-Config-Path: config/</span><br><span class=\"line\">ATG-Class-Path: ./bin/</span><br></pre></td></tr></table></figure>\n<h2 id=\"Step-5-Build-amp-Deploy\"><a href=\"#Step-5-Build-amp-Deploy\" class=\"headerlink\" title=\"Step 5: Build &amp; Deploy\"></a>Step 5: Build &amp; Deploy</h2><p>Build the project and copy the project folder into ${DYNAMO_ROOT} and run the following command to generate an ear file of your project and deploy it in your jboss server. No need to generate any ear file if you are running it on Tomcat. Just start the respective server with the given module.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">runAssembler.bat -jboss HelloWorld.ear -m EXP_HelloATGComponentWorld</span><br></pre></td></tr></table></figure>\n<h2 id=\"Step-6-Access-the-Component\"><a href=\"#Step-6-Access-the-Component\" class=\"headerlink\" title=\"Step 6: Access the Component\"></a>Step 6: Access the Component</h2><p>Navigate to Dyn/Admin and search for the component HelloWorldComponent and click on the component listed in the search results.</p>\n<p>SearchResults of the component we have just created<br>Search Results</p>\n<p>Click on it to go to the component page to see the property we have created and its value given in properties file.</p>\n<p>Component Property we have created</p>\n<p>You can see the server log to find a line similar to this.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INFO  [stdout] /dyn/admin/nucleus//com/buddha/components/HelloWorldComponent Hello ATG Component!</span><br><span class=\"line\">.....</span><br><span class=\"line\">INFO  [stdout] /dyn/admin/nucleus//com/buddha/components/HelloWorldComponent Hello ATG Component! Stops now!</span><br></pre></td></tr></table></figure>\n<p>This line is generated because of the sysout in our doStartService(); You can also give other methods that can be called through dyn/admin or interact with other components. However in production, avoid using System.out.println, instead use loggingDebug or loggingInfo. Best of Luck.</p>"},{"title":"Open Source Patch Utility For Perforce","date":"2016-03-08T18:13:41.000Z","description":"Introduction to an opensource utility for generating patch files for pending changelists in perforce version controlling system","featuredimage":"abc","download":"https://github.com/jbuddha/perforce-patcher/blob/master/dist/perforce-patcher.jar?raw=true","source":"_posts/2016/03/patch-utility-for-perforce.md","_content":"\nPerforce is a proprietary version controlling system. It has been around for more than 20 years. However, one glaring limitation always bugs the users. The inability to generate proper diff files.\n\nI can anticipate what is going on in your mind, we can generate a diff file by using the command line interface. `p4 diff` helps us generate a diff file. However if you ever had a misfortune of trying to generate patch files on regular basis. You would understand the pain. It works fine as long as you just modify existing files. However, if you have new files added to the workspace to be checked into to the depot, you quickly run out of luck. One more problem is that you can’t control the files included in the diff file based on change list. It gives you diff file for all the files that are modified. Of course, you can give individual file names, but you have to repeat it either one by one or by using common wildcard.\nTo overcome this, I have come up with a simple JavaFX utility.  Using this utility is as simple as it can get.\n\nUpon opening the application you will be presented with the login screen. Login with your regular perforce credentials, deselect Remember me, if you don’t want to store the data entered by you locally. By leaving the default value your credentials will be saved in the application cache so that you need not enter it again. If the login is successful, you will be taken to the next screen otherwise check the Log pane for error.\n<!-- more -->\nSelect the local perforce workspace name and the change list id and click Generate Patch button and save the file at your preferred location through the Save dialog which pops up.\n\n{% admonition info %}\nYou will be logged out upon closing the application automatically.You can download the utility as a runnable jar from the github repository folder.\n{% endadmonition %}\nYou can find the project and its source in github. If you like the project, and want to contribute by adding more features, please fork the github repo. It is a maven project so building it is as quick as a wink.\n{% admonition warning Watchout %}\nYou Need JRE 8 to run this without any additional configuration. If you are using JRE 7, please keep jfxrt.jar in class path or simply copy it to your jre/lib/ext folder. jfxrt.jar is available inside your {jre or jdk}/lib folder.\n{% endadmonition %}\n","raw":"---\ntitle: Open Source Patch Utility For Perforce\ndate: 2016-03-08 23:43:41\ntags: ['javafx','opensource','perforce','java']\ndescription: Introduction to an opensource utility for generating patch files for pending changelists in perforce version controlling system\nfeaturedimage: abc\ndownload: https://github.com/jbuddha/perforce-patcher/blob/master/dist/perforce-patcher.jar?raw=true\nsource: https://github.com/jbuddha/perforce-patcher\n---\n\nPerforce is a proprietary version controlling system. It has been around for more than 20 years. However, one glaring limitation always bugs the users. The inability to generate proper diff files.\n\nI can anticipate what is going on in your mind, we can generate a diff file by using the command line interface. `p4 diff` helps us generate a diff file. However if you ever had a misfortune of trying to generate patch files on regular basis. You would understand the pain. It works fine as long as you just modify existing files. However, if you have new files added to the workspace to be checked into to the depot, you quickly run out of luck. One more problem is that you can’t control the files included in the diff file based on change list. It gives you diff file for all the files that are modified. Of course, you can give individual file names, but you have to repeat it either one by one or by using common wildcard.\nTo overcome this, I have come up with a simple JavaFX utility.  Using this utility is as simple as it can get.\n\nUpon opening the application you will be presented with the login screen. Login with your regular perforce credentials, deselect Remember me, if you don’t want to store the data entered by you locally. By leaving the default value your credentials will be saved in the application cache so that you need not enter it again. If the login is successful, you will be taken to the next screen otherwise check the Log pane for error.\n<!-- more -->\nSelect the local perforce workspace name and the change list id and click Generate Patch button and save the file at your preferred location through the Save dialog which pops up.\n\n{% admonition info %}\nYou will be logged out upon closing the application automatically.You can download the utility as a runnable jar from the github repository folder.\n{% endadmonition %}\nYou can find the project and its source in github. If you like the project, and want to contribute by adding more features, please fork the github repo. It is a maven project so building it is as quick as a wink.\n{% admonition warning Watchout %}\nYou Need JRE 8 to run this without any additional configuration. If you are using JRE 7, please keep jfxrt.jar in class path or simply copy it to your jre/lib/ext folder. jfxrt.jar is available inside your {jre or jdk}/lib folder.\n{% endadmonition %}\n","slug":"2016/03/patch-utility-for-perforce","published":1,"updated":"2016-03-28T17:08:29.851Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cimc9peyx0002bgy73t71iagy","content":"<p>Perforce is a proprietary version controlling system. It has been around for more than 20 years. However, one glaring limitation always bugs the users. The inability to generate proper diff files.</p>\n<p>I can anticipate what is going on in your mind, we can generate a diff file by using the command line interface. <code>p4 diff</code> helps us generate a diff file. However if you ever had a misfortune of trying to generate patch files on regular basis. You would understand the pain. It works fine as long as you just modify existing files. However, if you have new files added to the workspace to be checked into to the depot, you quickly run out of luck. One more problem is that you can’t control the files included in the diff file based on change list. It gives you diff file for all the files that are modified. Of course, you can give individual file names, but you have to repeat it either one by one or by using common wildcard.<br>To overcome this, I have come up with a simple JavaFX utility.  Using this utility is as simple as it can get.</p>\n<p>Upon opening the application you will be presented with the login screen. Login with your regular perforce credentials, deselect Remember me, if you don’t want to store the data entered by you locally. By leaving the default value your credentials will be saved in the application cache so that you need not enter it again. If the login is successful, you will be taken to the next screen otherwise check the Log pane for error.<br><a id=\"more\"></a><br>Select the local perforce workspace name and the change list id and click Generate Patch button and save the file at your preferred location through the Save dialog which pops up.</p>\n<div class=\"admonition info\"><p class=\"admonition-title\">Note</p><p>You will be logged out upon closing the application automatically.You can download the utility as a runnable jar from the github repository folder.</p></div>\n<p>You can find the project and its source in github. If you like the project, and want to contribute by adding more features, please fork the github repo. It is a maven project so building it is as quick as a wink.<br><div class=\"admonition warning\"><p class=\"admonition-title\">Watchout</p><p>You Need JRE 8 to run this without any additional configuration. If you are using JRE 7, please keep jfxrt.jar in class path or simply copy it to your jre/lib/ext folder. jfxrt.jar is available inside your {jre or jdk}/lib folder.</p></div></p>\n","excerpt":"<p>Perforce is a proprietary version controlling system. It has been around for more than 20 years. However, one glaring limitation always bugs the users. The inability to generate proper diff files.</p>\n<p>I can anticipate what is going on in your mind, we can generate a diff file by using the command line interface. <code>p4 diff</code> helps us generate a diff file. However if you ever had a misfortune of trying to generate patch files on regular basis. You would understand the pain. It works fine as long as you just modify existing files. However, if you have new files added to the workspace to be checked into to the depot, you quickly run out of luck. One more problem is that you can’t control the files included in the diff file based on change list. It gives you diff file for all the files that are modified. Of course, you can give individual file names, but you have to repeat it either one by one or by using common wildcard.<br>To overcome this, I have come up with a simple JavaFX utility.  Using this utility is as simple as it can get.</p>\n<p>Upon opening the application you will be presented with the login screen. Login with your regular perforce credentials, deselect Remember me, if you don’t want to store the data entered by you locally. By leaving the default value your credentials will be saved in the application cache so that you need not enter it again. If the login is successful, you will be taken to the next screen otherwise check the Log pane for error.<br>","more":"<br>Select the local perforce workspace name and the change list id and click Generate Patch button and save the file at your preferred location through the Save dialog which pops up.</p>\n<div class=\"admonition info\"><p class=\"admonition-title\">Note</p><p>You will be logged out upon closing the application automatically.You can download the utility as a runnable jar from the github repository folder.</p></div>\n<p>You can find the project and its source in github. If you like the project, and want to contribute by adding more features, please fork the github repo. It is a maven project so building it is as quick as a wink.<br><div class=\"admonition warning\"><p class=\"admonition-title\">Watchout</p><p>You Need JRE 8 to run this without any additional configuration. If you are using JRE 7, please keep jfxrt.jar in class path or simply copy it to your jre/lib/ext folder. jfxrt.jar is available inside your {jre or jdk}/lib folder.</p></div></p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cimc9peyb0001bgy7oxkr3qs6","tag_id":"cimc9pez90003bgy7kcundxwt","_id":"cimc9pf060007bgy7c3691uu0"},{"post_id":"cimc9peyb0001bgy7oxkr3qs6","tag_id":"cimc9pf040004bgy7lk21hd7y","_id":"cimc9pf060008bgy7pj5uejzs"},{"post_id":"cimc9peyb0001bgy7oxkr3qs6","tag_id":"cimc9pf050005bgy78bk7l7up","_id":"cimc9pf07000abgy7nsed9ojx"},{"post_id":"cimc9peyx0002bgy73t71iagy","tag_id":"cimc9pf050006bgy7oy15gbhy","_id":"cimc9pf0a000dbgy7hpe2aj5t"},{"post_id":"cimc9peyx0002bgy73t71iagy","tag_id":"cimc9pf060009bgy7xxzocoet","_id":"cimc9pf0a000ebgy7xm4m92e2"},{"post_id":"cimc9peyx0002bgy73t71iagy","tag_id":"cimc9pf07000bbgy73mj2u7ua","_id":"cimc9pf0a000fbgy7rqynjvu8"},{"post_id":"cimc9peyx0002bgy73t71iagy","tag_id":"cimc9pf040004bgy7lk21hd7y","_id":"cimc9pf0b000gbgy7uyc3nteg"}],"Tag":[{"name":"atg","_id":"cimc9pez90003bgy7kcundxwt"},{"name":"java","_id":"cimc9pf040004bgy7lk21hd7y"},{"name":"oraclecommerce","_id":"cimc9pf050005bgy78bk7l7up"},{"name":"javafx","_id":"cimc9pf050006bgy7oy15gbhy"},{"name":"opensource","_id":"cimc9pf060009bgy7xxzocoet"},{"name":"perforce","_id":"cimc9pf07000bbgy73mj2u7ua"}]}}